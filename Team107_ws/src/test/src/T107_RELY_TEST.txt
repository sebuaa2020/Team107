测试系统的可靠性

1.测试系统启动可靠性

启动应在15秒内完成，gazebo正常打开、地图正常显示为结束
重复20次，记录启动花费时间

1: 14.29            11: 7.35
2: 7.97             12: 8.59
3: 9.00             13: 8.61
4: 8.75             14: 9.36
5: 10.23            15: 8.11
6: 9.12             16: 8.25
7: 8.35             17: 8.33
8: 9.82             18: 9.22
9: 8.28             19: 7.32
10: 9.32            20: 8.43

平均值：8.9325   标准差：1.45

2.测试手动控制的可靠性

1）启动手动控制节点后，手动控制逆时针绕地图一圈，结束控制节点
2）重启手动控制节点，将速度调整为默认的1.5倍，顺时针绕地图一圈，结束控制节点
3）重启手动控制节点，将速度调整为默认的2倍，随意移动，走遍地图中每一个可达点

记录运行情况：是否有卡顿、失控、速度不稳定的情况.

1）2）中正常
3）中总体正常，旋转时速度较快，不太好控制.

3.测试建图、存图的可靠性

在gazebo中添加各种障碍物，检测建图的可靠性
对地图中部分区域重复建图5次，比较不同轮次的区别


4.测试导航的可靠性

使用gen_rand_point.py 生成20个随机的导航坐标

在导航接口按照次序输入，记录每一个导航任务的执行情况（导航坐标、执行成功坐标，误差）
分析系统执行导航指令的可靠性

1: -5.35 1.89              //不可达点
2: 3.76 -4.83              3.76 -4.71            0.00 0.12
3: -2.26 -5.80             //不可达点
4: -7.05 -6.51             -6.94 -6.55           0.11 0.04
5: 2.44 4.35                2.33  4.38           0.11 0.03
6: -3.45 -9.19              //不可达点
7: 5.86 8.65                5.76 8.71            0.10 0.06
8: 4.46 -8.11               4.38 -8.00           0.08 0.11
9: -1.07 4.80               -0.97 4.79           0.10 0.01
10: 6.47 -8.62              6.39 -8.55           0.08 0.07  
11: -3.18 2.31              -3.16 2.40           0.02 0.09
12: 1.35 0.31               1.24  0.29           0.11 0.02
13: 0.86 1.91               0.82  1.82           0.04 0.09 
14: -3.56 -2.91             -3.47 -2.94          0.09 0.03
15: 0.11 -0.01              0.05  0.03           0.06 0.04
16: -6.25 7.62              -6.33 7.68           0.08 0.06
17: -1.88 -7.63             -1.93 -7.72          0.05 0.11
18: 4.59 -8.13              4.48  -8.11          0.11 0.02
19: 0.76 5.41               0.66 5.37            0.10 0.04
20: 4.64 -8.12              4.56 -8.05           0.08 0.07

