#name=PropertiesConfig
## 公共变量
## 文件路径
#property.filePath=E://logs
#property.filePattern=logs/%d{yyyy-MM-dd}
## 输出格式
#property.layoutPattern=%highlight{%d{MM-dd HH:mm:ss.SSS} [%5p] [%40.40c{1.}:%3L] - %m%n}{FATAL=white, ERROR=red, WARN=blue, INFO=Green, DEBUG=Yellow, TRACE=blue}
## 记录器
##appenders=Console,Debug,Info,Error
#appenders=Console
### 根记录器，所有记录器的父辈
#rootLogger.level=info
## 级别过滤（过滤日志记录）
## filters = threshold
#filter.threshold.type=ThresholdFilter
## 只记录debug级别以上的日志，大小写无关：(ALL<)TRACE<DEBUG<INFO<WARN<ERROR<FATAL(<OFF)
#filter.threshold.level=info
## console
#appender.Console.type=Console
#appender.Console.name=Stdout
#appender.Console.layout.type=PatternLayout
#appender.Console.layout.pattern=${layoutPattern}
#rootLogger.appenderRef.stdout.ref=Stdout
## debug rolling file
#appender.Debug.type=RollingFile
#appender.Debug.name=DebugRollingFile
#appender.Debug.fileName=${filePath}/debug.log
#appender.Debug.filePattern=${filePattern}/debug_%d{yyyy-MM-dd}_%i.log
#appender.Debug.layout.type=PatternLayout
#appender.Debug.layout.pattern=${layoutPattern}
#appender.Debug.policies.type=Policies
#appender.Debug.policies.time.type=TimeBasedTriggeringPolicy
#appender.Debug.policies.time.interval=1
#appender.Debug.policies.time.modulate=true
#appender.Debug.policies.size.type=SizeBasedTriggeringPolicy
#appender.Debug.policies.size.size=20M
#appender.Debug.strategy.type=DefaultRolloverStrategy
#appender.Debug.strategy.max=100
## 过滤debug以上信息
#appender.Debug.filter.threshold.type=ThresholdFilter
#appender.Debug.filter.threshold.level=INFO
#appender.Debug.filter.threshold.onMatch=DENY
#appender.Debug.filter.threshold.onMisMatch=NEUTRAL
## InfoRollingFile 日志级别
#rootLogger.appenderRef.Debug.level=debug
#rootLogger.appenderRef.Debug.ref=DebugRollingFile
## info rolling file
#appender.Info.type=RollingFile
#appender.Info.name=InfoRollingFile
#appender.Info.fileName=${filePath}/info.log
#appender.Info.filePattern=${filePattern}/info_%d{yyyy-MM-dd}_%i.log
#appender.Info.layout.type=PatternLayout
#appender.Info.layout.pattern=${layoutPattern}
#appender.Info.policies.type=Policies
#appender.Info.policies.time.type=TimeBasedTriggeringPolicy
#appender.Info.policies.time.interval=1
#appender.Info.policies.time.modulate=true
#appender.Info.policies.size.type=SizeBasedTriggeringPolicy
#appender.Info.policies.size.size=20M
#appender.Info.strategy.type=DefaultRolloverStrategy
#appender.Info.strategy.max=100
## 过滤 info 以上信息,只输出 info 级别日志
#appender.Info.filter.threshold.type=ThresholdFilter
#appender.Info.filter.threshold.level=warn
#appender.Info.filter.threshold.onMatch=DENY
#appender.Info.filter.threshold.onMisMatch=NEUTRAL
## InfoRollingFile 日志级别
#rootLogger.appenderRef.Info.level=info
#rootLogger.appenderRef.Info.ref=InfoRollingFile
## error rolling file
#appender.Error.type=RollingFile
#appender.Error.name=ErrorRollingFile
#appender.Error.fileName=${filePath}/error.log
#appender.Error.filePattern=${filePattern}/error_%d{yyyy-MM-dd}_%i.log
#appender.Error.layout.type=PatternLayout
#appender.Error.layout.pattern=${layoutPattern}
#appender.Error.policies.type=Policies
#appender.Error.policies.time.type=TimeBasedTriggeringPolicy
#appender.Error.policies.time.interval=1
#appender.Error.policies.time.modulate=true
#appender.Error.policies.size.type=SizeBasedTriggeringPolicy
#appender.Error.policies.size.size=20M
#appender.Error.strategy.type=DefaultRolloverStrategy
#appender.Error.strategy.max=100
## 过滤 error 以上信息,只输出 error 级别日志
#appender.Error.filter.threshold.type=ThresholdFilter
#appender.Error.filter.threshold.level=fatal
#appender.Error.filter.threshold.onMatch=DENY
#appender.Error.filter.threshold.onMisMatch=NEUTRAL
## ErrorRollingFile 日志级别
#rootLogger.appenderRef.Error.level=error
#rootLogger.appenderRef.Error.ref=ErrorRollingFile

# LOG4J配置
log4j.rootCategory=DEBUG, stdout, file

# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

# root日志输出到文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.file=/data/logs/springboot-log4j-all.log
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

# 按不同package进行输出
# com.micai包下的日志配置
log4j.category.com.micai=DEBUG, didifile

# com.micai下的日志输出
log4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.didifile.file=/data/logs/springboot-log4j-my.log
log4j.appender.didifile.DatePattern='.'yyyy-MM-dd
log4j.appender.didifile.layout=org.apache.log4j.PatternLayout
log4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n

# ERROR级别输出到特定的日志文件中
log4j.logger.error=errorfile
# error日志输出
log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorfile.file=/data/logs/springboot-log4j-error.log
log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
log4j.appender.errorfile.Threshold = ERROR
log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n